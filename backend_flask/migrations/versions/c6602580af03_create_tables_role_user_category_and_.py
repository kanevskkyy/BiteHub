"""Create tables Role, User, Category and Ingredients

Revision ID: c6602580af03
Revises: 
Create Date: 2025-09-05 17:36:22.501374

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision = 'c6602580af03'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('icon_url', sqlalchemy_utils.types.url.URLType(), nullable=False),
    sa.CheckConstraint('length(trim(name)) > 0', name='ck_categories_name_required'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ingredients',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('calories', sa.Float(), nullable=False),
    sa.CheckConstraint('calories >= 0', name='ck_ingredients_calories_valid'),
    sa.CheckConstraint('length(trim(name)) > 0', name='ck_ingredients_name_required'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.CheckConstraint('length(trim(name)) > 0', name='ck_roles_name_required'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('avatar_url', sqlalchemy_utils.types.url.URLType(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.CheckConstraint('length(trim(username)) > 0', name='ck_users_username_required'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('ingredients')
    op.drop_table('categories')
    # ### end Alembic commands ###
