"""Initial commit


Revision ID: 1182767b7729
Revises: 
Create Date: 2025-09-10 11:01:58.776219

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = '1182767b7729'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('icon_url', sqlalchemy_utils.types.url.URLType(), nullable=False),
    sa.CheckConstraint('length(trim(name)) > 0', name='ck_categories_name_required'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ingredients',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('icon_url', sqlalchemy_utils.types.url.URLType(), nullable=False),
    sa.CheckConstraint('length(trim(name)) > 0', name='ck_ingredients_name_required'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.CheckConstraint('length(trim(name)) > 0', name='ck_roles_name_required'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('avatar_url', sqlalchemy_utils.types.url.URLType(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.CheckConstraint('length(trim(first_name)) > 0', name='ck_users_first_name_required'),
    sa.CheckConstraint('length(trim(last_name)) > 0', name='ck_users_last_name_required'),
    sa.CheckConstraint('length(trim(username)) > 0', name='ck_users_username_required'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('recipes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('image_url', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('servings_count', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.CheckConstraint('duration > 0', name='ck_recipes_duration_valid'),
    sa.CheckConstraint('length(trim(description)) > 0', name='ck_recipes_description_required'),
    sa.CheckConstraint('length(trim(title)) > 0', name='ck_recipes_title_required'),
    sa.CheckConstraint('servings_count > 0', name='ck_recipes_servings_count_valid'),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('author_id', 'title', name='uq_recipes_author_id_title')
    )
    op.create_table('ratings',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('recipe_id', sa.UUID(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('length(trim(comment)) > 0', name='ck_ratings_comment_required'),
    sa.CheckConstraint('rating >= 1 AND rating <= 5', name='ck_ratings_rating_valid'),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'recipe_id')
    )
    op.create_table('recipe_categories',
    sa.Column('recipe_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('recipe_id', 'category_id')
    )
    op.create_table('recipe_ingredients',
    sa.Column('recipe_id', sa.UUID(), nullable=False),
    sa.Column('ingredient_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.String(length=40), nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('recipe_id', 'ingredient_id')
    )
    op.create_table('recipe_steps',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('recipe_id', sa.UUID(), nullable=False),
    sa.Column('step_number', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.CheckConstraint('length(trim(description)) > 0', name='ck_recipe_steps_description_required'),
    sa.CheckConstraint('step_number >= 1', name='ck_recipe_steps_step_number_valid'),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('recipe_steps')
    op.drop_table('recipe_ingredients')
    op.drop_table('recipe_categories')
    op.drop_table('ratings')
    op.drop_table('recipes')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('ingredients')
    op.drop_table('categories')
    # ### end Alembic commands ###
